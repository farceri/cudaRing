//
// Author: Francesco Arceri
// Date:   10-03-2021
//
// FUNCTION DECLARATIONS

#include "include/DPM2D.h"
#include <vector>
#include <tuple>
#include <functional>
#include <utility>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>
#include <pybind11/numpy.h>

namespace py = pybind11;

PYBIND11_MODULE(libPyDPM, m) {
	m.doc() = "libPyDPM Python interface to CUDA deformable particle packing code";
  py::class_<DPM2D>(m, "DPM2D")
  .def(py::init<int, int, int>(), py::arg("nParticles"), py::arg("dim"), py::arg("nVertexPerParticle"))
  .def("initParticleVariables", &DPM2D::initParticleVariables)
  .def("initParticleDynamicalVariables", &DPM2D::initParticleDynamicalVariables)
  .def("initRotationalVariables", &DPM2D::initRotationalVariables)
  .def("initVertexVariables", &DPM2D::initVertexVariables)
  .def("initDynamicalVariables", &DPM2D::initDynamicalVariables)
  .def("initDeltaVariables", &DPM2D::initDeltaVariables)
  .def("initContacts", &DPM2D::initContacts)
  .def("initNeighbors", &DPM2D::initNeighbors)
  .def("initParticleNeighbors", &DPM2D::initParticleNeighbors)
  .def("initParticleIdList", &DPM2D::initParticleIdList)
//**************************** setters and getters ***************************//
  .def("setDimBlock", &DPM2D::setDimBlock)
  .def("getDimBlock", &DPM2D::getDimBlock)
  .def("setNDim", &DPM2D::setNDim)
  .def("getNDim", &DPM2D::getNDim)
  .def("setNumParticles", &DPM2D::setNumParticles)
  .def("getNumParticles", &DPM2D::getNumParticles)
  .def("setNumVertices", &DPM2D::setNumVertices)
  .def("getNumVertices", &DPM2D::getNumVertices)
  .def("setNumVertexPerParticle", &DPM2D::setNumVertexPerParticle)
  .def("getNumVertexPerParticle", &DPM2D::getNumVertexPerParticle)
  .def("setNumVertexInParticleList", &DPM2D::setNumVertexInParticleList)
  .def("getNumVertexInParticleList", &DPM2D::getNumVertexInParticleList)
  .def("setLengthScale", &DPM2D::setLengthScale)
  .def("setSphericalLengthScale", &DPM2D::setSphericalLengthScale)
  .def("setLengthScaleToOne", &DPM2D::setLengthScaleToOne)
  .def("setBoxSize", &DPM2D::setBoxSize)
  .def("getBoxSize", &DPM2D::getBoxSize)
  .def("setVertexRadii", &DPM2D::setVertexRadii)
  .def("getVertexRadii", &DPM2D::getVertexRadii)
  .def("getMaxRadius", &DPM2D::getMaxRadius)
  .def("setRestAreas", &DPM2D::setRestAreas)
  .def("getRestAreas", &DPM2D::getRestAreas)
  .def("setRestLengths", &DPM2D::setRestLengths)
  .def("getRestLengths", &DPM2D::getRestLengths)
  .def("setRestAngles", &DPM2D::setRestAngles)
  .def("getRestAngles", &DPM2D::getRestAngles)
  .def("getSegmentLengths", &DPM2D::getSegmentLengths)
  .def("setAreas", &DPM2D::setAreas)
  .def("getAreas", &DPM2D::getAreas)
  .def("getPerimeters", &DPM2D::getPerimeters)
  //void DPM2D::calcParticlesShape()
  //void DPM2D::calcParticlesPositions()
  .def("setDefaultParticleRadii", &DPM2D::setDefaultParticleRadii)
  .def("setParticleRadii", &DPM2D::setParticleRadii)
  .def("getParticleRadii", &DPM2D::getParticleRadii)
  .def("setParticlePositions", &DPM2D::setParticlePositions)
  .def("getParticlePositions", &DPM2D::getParticlePositions)
  .def("getPBCParticlePositions", &DPM2D::getPBCParticlePositions)
  .def("setParticleVelocities", &DPM2D::setParticleVelocities)
  .def("getParticleVelocities", &DPM2D::getParticleVelocities)
  .def("setParticleForces", &DPM2D::setParticleForces)
  .def("getParticleForces", &DPM2D::getParticleForces)
  .def("getMeanParticleSize", &DPM2D::getMeanParticleSize)
  .def("setParticleAngles", &DPM2D::setParticleAngles)
  .def("getParticleAngles", &DPM2D::getParticleAngles)
  .def("setVertexPositions", &DPM2D::setVertexPositions)
  .def("getVertexPositions", &DPM2D::getVertexPositions)
  .def("setVertexVelocities", &DPM2D::setVertexVelocities)
  .def("getVertexVelocities", &DPM2D::getVertexVelocities)
  .def("setVertexForces", &DPM2D::setVertexForces)
  .def("getVertexForces", &DPM2D::getVertexForces)
  .def("setVertexTorques", &DPM2D::setVertexTorques)
  .def("getVertexTorques", &DPM2D::getVertexTorques)
  .def("getStressTensor", &DPM2D::getStressTensor)
  .def("getPerParticleStressTensor", &DPM2D::getPerParticleStressTensor)
  .def("getPressure", &DPM2D::getPressure)
  .def("getTotalForceMagnitude", &DPM2D::getTotalForceMagnitude)
  .def("getMaxUnbalancedForce", &DPM2D::getMaxUnbalancedForce)
  .def("getMaxNeighborList", &DPM2D::getMaxNeighborList)
  .def("getNeighbors", &DPM2D::getNeighbors)
  .def("getContacts", &DPM2D::getContacts)
  //DPM2D::printNeighbors()
  //DPM2D::printContacts()
  .def("getPotentialEnergy", &DPM2D::getPotentialEnergy)
  .def("getKineticEnergy", &DPM2D::getKineticEnergy)
  .def("getTemperature", &DPM2D::getTemperature)
  .def("getTotalEnergy", &DPM2D::getTotalEnergy)
  .def("getPhi", &DPM2D::getPhi)
  .def("getPreferredPhi", &DPM2D::getPreferredPhi)
  .def("getParticlePhi", &DPM2D::getParticlePhi)
  .def("getVertexMSD", &DPM2D::getVertexMSD)
  .def("getParticleMSD", &DPM2D::getParticleMSD)
  .def("getWaveNumber", &DPM2D::getWaveNumber)
  .def("getVertexISF", &DPM2D::getVertexISF)
  .def("getParticleISF", &DPM2D::getParticleISF)
  .def("getHexaticOrderParameter", &DPM2D::getHexaticOrderParameter)
  .def("getAreaFluctuation", &DPM2D::getAreaFluctuation)
//************************ initilization functions ***************************//
  .def("setMonoSizeDistribution", &DPM2D::setMonoSizeDistribution)
  //void DPM2D::setBiSizeDistribution();
  .def("setPolyRandomSoftParticles", &DPM2D::setPolyRandomSoftParticles)
  .def("setPolySizeDistribution", &DPM2D::setPolySizeDistribution)
  .def("setSinusoidalRestAngles", &DPM2D::setSinusoidalRestAngles)
  .def("setRandomParticles", &DPM2D::setRandomParticles)
  .def("initVerticesOnParticles", &DPM2D::initVerticesOnParticles)
  .def("scaleVertices", &DPM2D::scaleVertices)
  .def("scaleParticles", &DPM2D::scaleParticles)
  .def("scaleSoftParticles", &DPM2D::scaleSoftParticles)
  .def("scaleParticleVelocity", &DPM2D::scaleParticleVelocity)
  .def("translateVertices", &DPM2D::translateVertices)
  .def("rotateVertices", &DPM2D::rotateVertices)
  .def("computeParticleAngleFromVel", &DPM2D::computeParticleAngleFromVel)
//*************************** force and energy *******************************//
  .def("setSpringConstants", &DPM2D::setSpringConstants)
  .def("setAttractionConstants", &DPM2D::setAttractionConstants)
  .def("setTimeScale", &DPM2D::setTimeScale)
  .def("setTimeStep", &DPM2D::setTimeStep)
  .def("calcForceEnergy", &DPM2D::calcForceEnergy)
  .def("calcVertexForceAngAcc", &DPM2D::calcVertexForceAngAcc)
  .def("calcRigidForceEnergy", &DPM2D::calcRigidForceEnergy)
  .def("calcVertexForceTorque", &DPM2D::calcVertexForceTorque)
  .def("calcRigidForceTorque", &DPM2D::calcRigidForceTorque)
  .def("calcStressTensor", &DPM2D::calcStressTensor)
  .def("calcPerParticleStressTensor", &DPM2D::calcPerParticleStressTensor)
  .def("calcNeighborForces", &DPM2D::calcNeighborForces)
  .def("calcParticleNeighbors", &DPM2D::calcParticleNeighbors)
  .def("calcContacts", &DPM2D::calcContacts)
  .def("getContactVectors", &DPM2D::getContactVectors)
  .def("calcNeighborList", &DPM2D::calcNeighborList)
  //DPM2D::syncNeighborsToDevice()
//************************* particle functions *******************************//
  .def("calcParticleForceEnergy", &DPM2D::calcParticleForceEnergy)
  .def("makeExternalParticleForce", &DPM2D::makeExternalParticleForce)
  .def("addExternalParticleForce", &DPM2D::addExternalParticleForce)
  .def("getParticleMaxUnbalancedForce", &DPM2D::getParticleMaxUnbalancedForce)
  .def("getRigidMaxUnbalancedForce", &DPM2D::getRigidMaxUnbalancedForce)
  .def("calcParticleStressTensor", &DPM2D::calcParticleStressTensor)
  .def("getParticlePressure", &DPM2D::getParticlePressure)
  .def("getParticleEnergy", &DPM2D::getParticleEnergy)
  .def("getParticleKineticEnergy", &DPM2D::getParticleKineticEnergy)
  .def("getParticleTemperature", &DPM2D::getParticleTemperature)
  .def("getParticleNeighbors", &DPM2D::getParticleNeighbors)
  .def("calcParticleNeighborList", &DPM2D::calcParticleNeighborList)
  //DPM2D::syncParticleNeighborsToDevice()
//************************** minimizer functions *****************************//
  .def("initFIRE", &DPM2D::initFIRE)
  .def("setParticleMassFIRE", &DPM2D::setParticleMassFIRE)
  .def("particleFIRELoop", &DPM2D::particleFIRELoop)
  .def("vertexFIRELoop", &DPM2D::vertexFIRELoop)
  .def("initRigidFIRE", &DPM2D::initRigidFIRE)
  .def("rigidFIRELoop", &DPM2D::rigidFIRELoop)
//********************* deformable particles integrators *********************//
  .def("initNVE", &DPM2D::initNVE)
  .def("NVELoop", &DPM2D::NVELoop)
  .def("initBrownian", &DPM2D::initBrownian)
  .def("brownianLoop", &DPM2D::brownianLoop)
  .def("initActiveBrownian", &DPM2D::initActiveBrownian)
  .def("activeBrownianLoop", &DPM2D::activeBrownianLoop)
  .def("initActiveBrownianDampedL0", &DPM2D::initActiveBrownianDampedL0)
  .def("ActiveBrownianDampedL0Loop", &DPM2D::ActiveBrownianDampedL0Loop)
//************************* soft particle simulators *************************//
  .def("initSoftParticleLangevin", &DPM2D::initSoftParticleLangevin)
  .def("softParticleLangevinLoop", &DPM2D::softParticleLangevinLoop)
  .def("initSoftParticleActiveLangevin", &DPM2D::initSoftParticleActiveLangevin)
  .def("softParticleActiveLangevinLoop", &DPM2D::softParticleActiveLangevinLoop)
  .def("initSoftParticleNVE", &DPM2D::initSoftParticleNVE)
  .def("softParticleNVELoop", &DPM2D::softParticleNVELoop)
  .def("initSoftParticleBrownian", &DPM2D::initSoftParticleBrownian)
  .def("softParticleBrownianLoop", &DPM2D::softParticleBrownianLoop)
  .def("initSoftParticleActiveBrownian", &DPM2D::initSoftParticleActiveBrownian)
  .def("softParticleBrownianLoop", &DPM2D::softParticleActiveBrownianLoop)
  .def("initSoftParticleBAB", &DPM2D::initSoftParticleBAB)
  .def("softParticleBABLoop", &DPM2D::softParticleBABLoop)
//************************* rigid particle simulators ************************//
  .def("initRigidActiveBrownian", &DPM2D::initRigidBrownian)
  .def("rigidBrownianLoop", &DPM2D::rigidBrownianLoop)
  .def("initRigidRotActiveBrownian", &DPM2D::initRigidRotActiveBrownian)
  .def("rigidRotActiveBrownianLoop", &DPM2D::rigidRotActiveBrownianLoop)
  .def("initRigidActiveBrownian", &DPM2D::initRigidActiveBrownian)
  .def("rigidActiveBrownianLoop", &DPM2D::rigidActiveBrownianLoop)
  ;
}
